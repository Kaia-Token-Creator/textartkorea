<!DOCTYPE html>
<html lang="ko">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover">
<title>텍스트 아트 생성기 - textartkorea.com</title>
<!-- favicon -->
  <link rel="icon" type="image/ico" sizes="32x32" href="/favicon.ico">
<meta name="description" content="이미지를 텍스트 아트로 만들어보세요">
<meta property="og:type" content="website">
<meta property="og:title" content="텍스트 아트 생성기 - textartkorea.com">
<meta property="og:description" content="이미지를 텍스트 아트로 만들어보세요">
<meta property="og:site_name" content="textartkorea.com">
 <meta property="og:image" content="https://textartkorea.com/preview.jpg">
  <meta property="og:url" content="https://textartkorea.com">
<style>
  :root{--bg:#0b0f14;--panel:#111823;--text:#e5eef7;--muted:#94a3b8;--accent:#4f9cf9;--border:#1e293b}
  *{box-sizing:border-box}
  body{margin:0;background:var(--bg);color:var(--text);font-family:ui-monospace,monospace}
  .wrap{max-width:940px;margin:0 auto;padding:16px}
  header{display:flex;justify-content:space-between;align-items:center;margin-bottom:12px;gap:8px}
  .title{font-weight:800;font-size:18px}
  .sharebar{display:flex;gap:8px;align-items:center;flex-wrap:wrap}
  .panel{background:var(--panel);border:1px solid var(--border);border-radius:14px;padding:14px}
  .grid{display:grid;gap:12px}
  @media(min-width:960px){.grid{grid-template-columns:360px 1fr}}
  .drop{border:2px dashed #334155;border-radius:12px;padding:16px;text-align:center;background:#0f172a55;cursor:pointer}
  .drop:hover{border-color:var(--accent)}
  .drop input{display:none}
  .hint{color:var(--muted);font-size:12px}
  .notice{margin-top:8px;padding:10px;border:1px dashed #2b3b55;border-radius:10px;background:#0f172a88}
  .row{display:flex;justify-content:space-between;align-items:center;margin:8px 0;gap:10px}
  .row>div{flex:1}
  input[type="range"], select, input[type="color"]{width:100%}
  .btns{display:flex;flex-wrap:wrap;gap:8px;margin-top:10px}
  button{background:#1e293b;color:#dbeafe;border:1px solid #2b3b55;padding:10px 14px;border-radius:10px;font-weight:700;cursor:pointer}
  button.primary{background:linear-gradient(180deg,#3b82f6,#2563eb);color:#fff}
  button:disabled{opacity:.5;cursor:not-allowed}
  .iconbtn{display:inline-flex;align-items:center;gap:6px}
  pre#ascii{margin:0;white-space:pre;overflow:auto;background:#000;color:#fff;padding:10px;border-radius:12px;line-height:1em}
</style>
</head>
<body>
<div class="wrap">
  <header>
    <div class="title">🔤 텍스트 아트 생성기</div>
    <div class="sharebar">
      <button id="shareSite" class="iconbtn">📤 친구에게 공유</button>
    </div>
  </header>

  <div class="grid">
    <!-- 왼쪽: 컨트롤 -->
    <div class="panel">
      <label class="drop" id="drop">
        <input id="file" type="file" accept="image/*">
        <div><strong>이미지를 드롭</strong>하거나 탭하여 업로드</div>
        <div class="hint">클립보드에서 붙여넣기도 가능</div>
      </label>

      <div class="notice">💡 <strong>이미지로 저장해야 예쁘게 보여요.</strong> 카톡은 폰트가 달라 줄맞춤이 깨질 수 있어요.</div>

      <div class="row">
        <div>
          <label class="hint">출력 폭: <span id="wVal">120</span>열</label>
          <input id="width" type="range" min="30" max="300" value="120">
        </div>
        <div>
          <label class="hint">폰트 크기: <span id="fsVal">12</span>px</label>
          <input id="fontsize" type="range" min="8" max="20" value="12">
        </div>
      </div>

      <div class="row">
        <div>
          <label class="hint" for="mode">모드</label>
          <select id="mode">
            <option value="mono" selected>흑백</option>
            <option value="color">컬러</option>
          </select>
        </div>
        <div>
          <label class="hint" for="fontColor">폰트 색상(흑백)</label>
          <input id="fontColor" type="color" value="#ffffff">
        </div>
        <div>
          <label class="hint" for="bgColor">배경 색상</label>
          <input id="bgColor" type="color" value="#000000">
        </div>
      </div>

      <div class="btns">
        <button id="render" class="primary" disabled>만들기</button>
        <button id="copyBtn" class="iconbtn" disabled>📋 복사</button>
        <button id="shareImage" disabled>이미지 공유</button>
        <button id="savePng" disabled>이미지 저장</button>
        <button id="clear">초기화</button>
      </div>
    </div>

    <!-- 오른쪽: 미리보기/출력 -->
    <div class="panel">
      <div id="preview" style="margin-bottom:8px"></div>
      <pre id="ascii"></pre>
    </div>
  </div>
</div>

<!-- 내부 처리용 캔버스 -->
<canvas id="canvas" style="display:none"></canvas>

<script>
const fileInput=document.getElementById('file');
const drop=document.getElementById('drop');
const preview=document.getElementById('preview');
const asciiPre=document.getElementById('ascii');
const canvas=document.getElementById('canvas');
const ctx=canvas.getContext('2d',{willReadFrequently:true});

const widthRange=document.getElementById('width');
const fontsizeRange=document.getElementById('fontsize');
const wVal=document.getElementById('wVal');
const fsVal=document.getElementById('fsVal');

const modeSel=document.getElementById('mode');
const fontColorInp=document.getElementById('fontColor');
const bgColorInp=document.getElementById('bgColor');

const btnRender=document.getElementById('render');
const btnCopy=document.getElementById('copyBtn');
const btnSavePng=document.getElementById('savePng');
const btnShareImage=document.getElementById('shareImage');
const btnClear=document.getElementById('clear');
const btnShareSite=document.getElementById('shareSite');

let img=null;
let latestAsciiText='';
let latestColorGrid=null; // 컬러 모드일 때 문자 색상 저장
const CHARSET="@%#*+=-:. ";

function clamp(v,min,max){return Math.max(min,Math.min(max,v))}
function toHex(v){v=clamp(v|0,0,255);return ('0'+v.toString(16)).slice(-2)}
function rgbToHex(r,g,b){return '#'+toHex(r)+toHex(g)+toHex(b)}

function readFile(file){
  if(!file) return;
  const url=URL.createObjectURL(file);
  const image=new Image();
  image.onload=()=>{
    img=image;
    preview.innerHTML=`<img src="${url}" style="max-width:100%;border-radius:8px;border:1px solid #1e293b">`;
    btnRender.disabled=false;
    asciiPre.innerHTML='';
    latestAsciiText='';
    latestColorGrid=null;
  };
  image.onerror=()=>alert('이미지를 불러오지 못했습니다.');
  image.src=url;
}

// 파일 입력/드래그/붙여넣기
fileInput.addEventListener('change',e=>readFile(e.target.files?.[0]));
drop.addEventListener('click',()=>fileInput.click());
['dragenter','dragover'].forEach(ev=>drop.addEventListener(ev,e=>{e.preventDefault();e.stopPropagation();}));
drop.addEventListener('drop',e=>{e.preventDefault();e.stopPropagation();readFile(e.dataTransfer.files?.[0]);});
window.addEventListener('paste',e=>{
  const items=e.clipboardData?.items; if(!items) return;
  for(const it of items){ if(it.type.startsWith('image/')){ readFile(it.getAsFile()); break; } }
});

// UI 표시값
widthRange.addEventListener('input',()=>wVal.textContent=widthRange.value);
fontsizeRange.addEventListener('input',()=>{fsVal.textContent=fontsizeRange.value;asciiPre.style.fontSize=fontsizeRange.value+'px';});
modeSel.addEventListener('change',()=>{
  fontColorInp.disabled = (modeSel.value==='color');
  if(img) renderASCII();
});
fontColorInp.addEventListener('input',()=>{ if(modeSel.value==='mono' && latestAsciiText) asciiPre.style.color = fontColorInp.value; });
bgColorInp.addEventListener('input',()=>{ if(latestAsciiText) asciiPre.style.background = bgColorInp.value; });

// 핵심 렌더링
function renderASCII(){
  if(!img) return;
  const targetCols=parseInt(widthRange.value,10);
  const fontSize=parseInt(fontsizeRange.value,10);
  const mode=modeSel.value; // 'mono' | 'color'
  const charAspect=2.0;

  // 리사이즈 후 샘플링
  const scale=targetCols/img.width;
  const targetRows=Math.max(1,Math.round(img.height*scale/charAspect));
  canvas.width=targetCols; canvas.height=targetRows;
  ctx.imageSmoothingEnabled=true; ctx.imageSmoothingQuality='high';
  ctx.drawImage(img,0,0,canvas.width,canvas.height);

  const {data,width,height}=ctx.getImageData(0,0,canvas.width,canvas.height);

  const lines=[]; const colorGrid=[];
  for(let y=0;y<height;y++){
    let line=''; const rowColors=[];
    for(let x=0;x<width;x++){
      const i=(y*width+x)*4;
      const r=data[i], g=data[i+1], b=data[i+2], a=data[i+3];
      const lum=0.2126*r + 0.7152*g + 0.0722*b;
      const t=clamp(lum/255,0,1);
      const idx=Math.round((1-t)*(CHARSET.length-1));
      const ch=CHARSET[idx]||' ';
      line+=ch;
      if(mode==='color'){
        const color=(a<10)? bgColorInp.value : rgbToHex(r,g,b);
        rowColors.push(color);
      }
    }
    lines.push(line);
    if(mode==='color') colorGrid.push(rowColors);
  }

  // 워터마크(항상 표시, 마지막 줄 끝에 고정)
  const domain="textartkorea.com";
  if(lines.length){
    const last=lines[lines.length-1];
    const start=Math.max(0,last.length-domain.length);
    lines[lines.length-1]=last.slice(0,start)+domain;

    if(mode==='color'){
      const rowIdx=lines.length-1;
      const cols=lines[0]?.length||0;
      const startCol=Math.max(0, cols-domain.length);
      for(let c=0;c<domain.length && (startCol+c)<cols;c++){
        colorGrid[rowIdx][startCol+c]='#ffffff';
      }
    }
  }else{
    lines.push(domain);
    if(mode==='color') colorGrid.push(domain.split('').map(()=> '#ffffff'));
  }

  latestAsciiText=lines.join('\n');
  latestColorGrid=(mode==='color') ? colorGrid : null;

  // UI 반영
  asciiPre.style.fontSize=fontSize+'px';
  asciiPre.style.background=bgColorInp.value;

  if(mode==='mono'){
    asciiPre.style.color=fontColorInp.value;
    asciiPre.textContent=latestAsciiText;
  }else{
    const rowsHtml=[];
    for(let y=0;y<lines.length;y++){
      const chars=lines[y]; const colors=colorGrid[y];
      let html='';
      for(let x=0;x<chars.length;x++){
        const ch=chars[x];
        html += `<span style="color:${colors[x]}">${ch===' ' ? '&nbsp;' : ch}</span>`;
      }
      rowsHtml.push(html);
    }
    asciiPre.innerHTML=rowsHtml.join('<br>');
  }

  btnCopy.disabled=false;
  btnSavePng.disabled=false;
  btnShareImage.disabled=false;
}

// PNG로 그리기 공통 루틴 (저장/공유 둘 다 사용)
async function buildImageBlob(){
  if(!latestAsciiText) return null;

  const mode=modeSel.value;
  const fontSize=parseInt(fontsizeRange.value,10);
  const fontColor=fontColorInp.value;
  const bgColor=bgColorInp.value;

  const tmp=document.createElement('canvas');
  const tctx=tmp.getContext('2d');
  const fontFamily='ui-monospace, SFMono-Regular, Menlo, Consolas, monospace';
  tctx.font=`${fontSize}px ${fontFamily}`;
  const charWidth=tctx.measureText('M').width;

  const lines=latestAsciiText.split('\n');
  const cols=Math.max(...lines.map(l=>l.length));
  const rows=lines.length;
  const pad=Math.round(fontSize*0.7);

  tmp.width=Math.ceil(pad + cols*charWidth + pad);
  tmp.height=Math.ceil(pad + rows*fontSize + pad);

  tctx.fillStyle=bgColor; tctx.fillRect(0,0,tmp.width,tmp.height);
  tctx.font=`${fontSize}px ${fontFamily}`;
  tctx.textBaseline='top';

  if(mode==='mono'){
    tctx.fillStyle=fontColor;
    for(let r=0;r<rows;r++){ tctx.fillText(lines[r], pad, pad + r*fontSize); }
  }else{
    for(let r=0;r<rows;r++){
      const chars=lines[r];
      const colors=latestColorGrid[r];
      let xPad=pad;
      for(let c=0;c<chars.length;c++){
        tctx.fillStyle=colors[c];
        tctx.fillText(chars[c], xPad, pad + r*fontSize);
        xPad += charWidth;
      }
    }
  }
  return await new Promise(res=> tmp.toBlob(res, 'image/png'));
}

// 버튼들
btnRender.addEventListener('click',renderASCII);

btnCopy.addEventListener('click',async()=>{
  try{ await navigator.clipboard.writeText(latestAsciiText); alert('복사되었습니다!'); }
  catch(e){ alert('복사 실패. 브라우저 권한을 확인하세요.'); }
});

btnSavePng.addEventListener('click',async()=>{
  const blob=await buildImageBlob();
  if(!blob){ alert('먼저 만들기를 눌러 출력물을 생성하세요.'); return; }
  const a=document.createElement('a');
  a.href=URL.createObjectURL(blob);
  a.download='text-art.png';
  a.click();
});

btnShareImage.addEventListener('click',async()=>{
  const blob=await buildImageBlob();
  if(!blob){ alert('먼저 만들기를 눌러 출력물을 생성하세요.'); return; }
  const file=new File([blob],'text-art.png',{type:'image/png'});
  if(navigator.canShare && navigator.canShare({files:[file]})){
    try{
      await navigator.share({files:[file], title:'텍스트 아트', text:'텍스트 아트를 공유합니다.'});
    }catch(e){ /* 사용자가 취소할 수 있음 */ }
  }else{
    // 폴백: 다운로드로 대체하고 안내
    const a=document.createElement('a');
    a.href=URL.createObjectURL(blob);
    a.download='text-art.png';
    a.click();
    alert('이 브라우저는 이미지 공유를 지원하지 않아 다운로드로 대체했어요. 다운로드된 이미지를 공유해 주세요.');
  }
});

// 최상단: 사이트 공유
btnShareSite.addEventListener('click',async()=>{
  const shareData={title:'텍스트 아트 생성기', text:'이미지를 텍스트 아트로 변환해보세요!', url:location.href};
  if(navigator.share){
    try{ await navigator.share(shareData); }catch(e){ /* 사용자가 취소 가능 */ }
  }else{
    try{
      await navigator.clipboard.writeText(location.href);
      alert('사이트 주소가 복사되었어요!');
    }catch(e){
      alert('공유를 지원하지 않는 브라우저입니다. 주소를 직접 복사해 주세요: '+location.href);
    }
  }
});

btnClear.addEventListener('click',()=>{
  img=null; latestAsciiText=''; latestColorGrid=null;
  fileInput.value=''; preview.innerHTML=''; asciiPre.innerHTML='';
  btnRender.disabled=true; btnCopy.disabled=true; btnSavePng.disabled=true; btnShareImage.disabled=true;
});

// 이미지 로드 감지해서 '만들기' 활성화
const mo=new MutationObserver(()=>{btnRender.disabled=!img;});
mo.observe(preview,{childList:true});

// 초기 상태
wVal.textContent=widthRange.value;
fsVal.textContent=fontsizeRange.value;
fontColorInp.disabled = (modeSel.value==='color');
</script>
</body>
</html>
